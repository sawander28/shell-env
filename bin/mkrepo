#!/bin/sh

name="${0##*/}"
GIT_UPSTREAM_HOST=git@rpi3.local
GIT_UPSTREAM_ROOT=${GIT_UPSTREAM_HOST}:repos
GIT_UPSTREAM_BASEDIR=/home/git/repos

REPO_BASEDIR="${PWD}"
REPO_NAME="${1}.git"
REPO_DESC="${2}"

msg() { printf "\033[1m=> $@\033[m\n"; }

msg_err() { printf "\033[1m\033[31mERROR: $@\033[m\n"; }


if [ "$#" -ne 2 ] || [ -z "${REPO_DESC}" ]; then
  msg_err "Usage: ${name} <repo> <description>";
  exit 17;
fi

ssh -t ${GIT_UPSTREAM_HOST} test -d "${GIT_UPSTREAM_BASEDIR}/${REPO_NAME}"
STATUS=$?
if [ $STATUS -eq 0 ]; then
  msg_err "Repository $REPO_NAME already exist on remote ${GIT_UPSTREAM_ROOT}"
  exit $STATUS
fi


msg "Basedir: $REPO_BASEDIR"
msg "Repo: $REPO_NAME"
msg "Description: $REPO_DESC"

ssh -t ${GIT_UPSTREAM_HOST} "mkdir -p ${GIT_UPSTREAM_BASEDIR}/${REPO_NAME} && git --bare init ${GIT_UPSTREAM_BASEDIR}/${REPO_NAME} && echo ${REPO_DESC} > ${GIT_UPSTREAM_BASEDIR}/${REPO_NAME}/description"
STATUS=$?
if [ $STATUS -ne 0 ]; then
  msg_err "Creating repository $REPO_NAME on remote ${GIT_UPSTREAM_ROOT} failed"
  exit $STATUS
else
  msg "Created repository $REPO_NAME on remote  ${GIT_UPSTREAM_ROOT}"
fi

repo=${REPO_NAME##*.}
tmp=$(mktemp -d /tmp/${repo}.XXXXXX)
git clone ${GIT_UPSTREAM_ROOT}/${REPO_NAME} ${tmp}/$repo >/dev/null 2>&1
STATUS=$?
if [ $STATUS -ne 0 ]; then
	msg_err "Exited with status $STATUS"
  exit $STATUS
fi

if [ -d ${tmp}/${repo}/.git ]; then
  cp -rf ${tmp}/${repo}/.git ${REPO_BASEDIR}
  msg "$repo initialized"
fi
exit $STATUS
