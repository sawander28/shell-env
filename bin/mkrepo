#!/bin/sh

script="${0##*/}"

. /home/wandsas/lib/colors.sh
. /home/wandsas/lib/functions.sh

# upstream
GIT_USER="git"
GIT_HOST="rpi3.lan"
GIT_ROOT="/repos"
GIT_UPSTREAM="${GIT_USER}@${GIT_HOST}:${GIT_ROOT}"

# local
REPO_BASEDIR="${PWD}"
REPO="${1}"
REPO_NAME="${1}"
REPO_DESCRIPTION="${2}"


if [ "$#" -lt 2 ] || [ -z "${REPO_DESCRIPTION}" ]; then
  warn "Usage: ${script} <REPO_NAME> <REPO_DESCIPTION>"
  exit 17
fi

# Test if repo already exist
if $(ssh -t ${GIT_USER}@${GIT_HOST} "test -d ${GIT_ROOT}/${REPO_NAME}" >/dev/null 2>&1); then
  warn "Repo $bocyan$REPO$reset already exists, aborting"
  exit 128
fi

ssh -t "${GIT_USER}@${GIT_HOST}" "mkdir -p ${GIT_ROOT}/${REPO_NAME} && git --bare init ${GIT_ROOT}/${REPO_NAME} && echo ${REPO_DESCRIPTION} > ${GIT_ROOT}/${REPO_NAME}/description" >/dev/null 2>&1
STATUS="$?"

# failed -> cleanup
if [ $STATUS -ne 0 ]; then
  [ -d "${GIT_ROOT}/${REPO}" ] && rm -Rf "${GIT_ROOT}/${REPO}"
  error "Creating repo $bocyan$REPO$reset on $GIT_HOST failed with error $STATUS"
  exit $STATUS
else
  info "Created repo $bocyan$REPO$reset on $bocyan$GIT_HOST$reset successfully"
fi

# local repo version controlled -> add remote
if [ -d "${REPO_BASEDIR}/.git" ]; then
  PREV="$PWD"
  cd "${REPO_BASEDIR}"
  git remote rename origin upstream >/dev/null 2>&1
  git remote add origin ${GIT_UPSTREAM}/${REPO_NAME}
  
  cd "${PREV}"
  info "Found existing repo $bocyan$REPO$reset"
  info "Changed remote origin to upstream"
  info "Added remote origin $bocyan${GIT_UPSTREAM}$reset"
else
  info "No version data found for current repo $bocyan$REPO$reset"
  info "Initialized new empty repo $bocyan$REPO$reset"
  tmpdir="$(mktemp -d /tmp/${REPO}.XXXXXX)"
  git clone "${GIT_UPSTREAM}/${REPO_NAME}" "${tmpdir}/${REPO}" >/dev/null 2>&1
  STATUS="$?"
  cp -Rf "${tmpdir}/${REPO}" "${REPO_BASEDIR}"
  rm -Rf "${tmpdir}"
  info "Git repo $bocyan$REPO$reset initialized."
fi

if [ ${STATUS} -eq 0 ]; then
  info "Script $bocyan$script$reset finished successfully"
else
  error "Script $bocyan$script$reset finished with error $bocyan$STATUS$reset"
fi
exit ${STATUS}
