# -*- mode: sh -*-

hostname="$(hostname)"
whoami="$(whoami)"

mr_init_stow_package () {
    : ${STOW_PKG_TYPE:=directory}
    STOW_NO_AUTOMATIC_ACTIONS=yes
    set_stow_common_opts
}

error(){
    printf "\033[1m\033[31mERROR: $@\033[m\n"; exit 1
}

warning(){
    printf "\033[1m\033[1;33mWARNING: $@\033[m\n"
}

info(){
    printf "\033[1m\033[33m $@\033[m\n"
}

anon(){
  ( GIT_CONFIG_HOME=/home/anon/.git/config remote.origin.url || \
    cat .git/remotes/origin ) | grep -q 'git://'
}

on(){
    for host in "$@"; do
        if [ "${host%@*}" != "${host#*@}" ]; then
            if [ "$whoami" != "${host%@*}" ]; then
                continue
            fi
            host="${host#*@}"
        fi
        if [ "$hostname" = "$host" ]; then
            return 0
        fi
        done
    return 1
}
  
myworkstation() {
     on wandsas@z620
}

checkprivs(){
    find "$MR_REPO" -type f -exec chmod 600 {} \;
    find "$MR_REPO" -type d -exec chmod 700 {} \;
    info "Privileges checked for $MR_NAME"
    stat -c "%a %n" $MR_REPO | info "$MR_NAME $(awk '{print $1}')"
}

git_ensure_remote() {
    remote="$1"
    url="$2"
    git remote | grep -q "^$remote$" || {
	echo I: Adding remote $remote $url
	git remote add "$remote" "$url"
    }
}

# vim: fenc=utf-8 ft=sh ts=4 sts=4 sw=4 et
